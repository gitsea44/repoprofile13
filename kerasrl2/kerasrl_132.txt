{'dependent': 'kerasrl', 'repo': '/EshwarSR/IISc-CCE-DeepRL-Project', 'language': 'Python', 'description': 'Project Repo for Deep RL course at CCE, IISc.', 'readme': "# DeepRL-Project\nProject Repo for Deep RL course at CCE, IISc. \n\nObjective: Agent to play 2048 game.\n\n## Code Base:\n\n`play.py` can be used to generate the simulations by changing the variables accordingly in the code.\n\n`simulations` folder contains all the simulations performed as part of the project.\n\n`models` folder contains models trained using `train.py` and `train_gpu.py`\n\nOther files were modified as per the need after borrowing it from the repos mentioned in the references.\n\n`Plots` can be found in the jupyter notebook Results.ipynb. \n\n## DQN agent\n\n### Installation\n\nInstall pre requisites\n\n`\npip install -r requirements_dqn.txt\n`\n\n### Training\n\nMake sure the data folder doesnt have any files (the folder is fine)\nFrom the project directory run \n`\npython dqn2048.py\n`\n\n### Testing\n\nIf you want to test the performance with pretrainde model,\nCopy the .h5f pretrained file from data/pretrained folder to the data folder,\nchange the TRAIN_TEST_MODE from 'train' to 'test' in dqn2048.py and then run\n`\npython dqn2048.py\n`\n\n### Results\n\nResults for training for 500,000 iterations are kept in data/pretrained folder\n\n## References:\n### 2048 Game:\n* https://en.wikipedia.org/wiki/2048_(video_game)\n* https://github.com/bfontaine/term2048\n\n### Monte Carlo Tree Search:\n* https://towardsdatascience.com/2048-solving-2048-with-monte-carlo-tree-search-ai-2dbe76894bab\n* https://github.com/robert-giaquinto/mcts_2048\n\n### Policy Networks:\n* http://www.mit.edu/~amarj/files/2048.pdf\n\n### DQN :\n* https://github.com/SergioIommi/DQN-2048\n", 'contents': "['README.md', 'Report.ipynb', 'board.py', 'callbacks2048.py', 'data', 'dqn2048.py', 'ga.py', 'game.py', 'game2048.py', 'game_0.pickle', 'good_games.txt', 'keypress.py', 'logs', 'models', 'play.py', 'play_func.py', 'prepare_training_data.py', 'preprocessed', 'preprocessed_gcp', 'processors2048.py', 'requirements.txt', 'requirements_dqn.txt', 'simulations', 'strategy.py', 'test.py', 'train.py', 'train_gpu.py', 'ui.py']", 'stars': 0, 'watchers': 0, 'forks': 0, 'deprepos': 0, 'deppacks': 0}