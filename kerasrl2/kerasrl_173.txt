{'dependent': 'kerasrl', 'repo': '/jnishii/docker-gym-keras', 'language': 'Dockerfile', 'description': None, 'readme': '# Docker image for playing with OpenAI Gym, PLE, and Roboschool on Jupyter with Keras\n \n## About\n\nA Docker image running OpenAI Gym, PLE, and Roboschool with Keras-rl on jupyter notebook/lab.\nThis image was developed based on [jaimeps/docker-rl-gym](https://github.com/jaimeps/docker-rl-gym).\n\n**Attention:** CUDA driver is not currently installed.\n\n## Installed Libraries\n\n**1. Basics:** \n- [NumPy](http://www.numpy.org/)\n- [Pandas](http://pandas.pydata.org/)\n- [Scipy](https://www.scipy.org/)\n- [scikit-image](https://scikit-image.org/)\n- [Matplotlib](http://matplotlib.org/)\n- [Seaborn](https://seaborn.pydata.org/)\n- [Jupyter notebook and lab](http://jupyter.org/)\n\n**2. Deep Learning:** \n- [TensorFlow](https://www.tensorflow.org/)\n- [Keras](http://keras.io/)\n\n**3. Reinforcement Learning:**\n- [Keras-RL](https://keras-rl.readthedocs.io/en/latest/)\n- [baselines](https://github.com/openai/baselines)\n- [TensorForce](https://github.com/reinforceio/tensorforce)\n\n**4. Environments:**\n- [openAI Gym](https://github.com/openai/gym)\n\t- with [mdp_gridworld](https://github.com/IRLL/reinforcement_learning_class)\n\t- without MuJoCo and Robotics (prepared Roboschool instead)\n- [Roboschool](https://github.com/openai/roboschool)\n- [PyGame Learning Environment](http://pygame-learning-environment.readthedocs.io/)\n\n**5. Others:** \n- [scikit-image](https://scikit-image.org/)\n- [ipywidgets](https://ipywidgets.readthedocs.io/en/stable/index.html)\n- [h5py](http://www.h5py.org/)\n\n## User and Home\n\nUser `jovyan` was prepared in the docker image and `/home/jovyan` is mounted to your working directory where you type `docker run`. In other words, the files on the working directory can be easily accessed from the docker.\n\n\n## GitHub\n\nYou can git clone from [jnishii/docker-gym-keras](https://github.com/jnishii/docker-gym-Keras)\n\n## DockerHub\n\nYou can pull the [built image from Docker Hub](https://hub.docker.com/r/jnishii/docker-gym-keras/) by \n\n```\n$ docker pull jnishii/docker-gym-keras\n```\n\n## Start Docker\n\nJust type `bin/docker-run.sh`, then Jupyter notebook will run.\n\n\n## Bash login\n\nJust type `bin/docker-run.sh -X`.\nJupyter will start by typing `jupyter.sh` on the bash terminal.\n\nIf you use need X forwarding on Mac OS, install XQuartz and socat (`brew install socat`), and run the command below on XQuartz before running the docker image:\n\n```\n$ socat TCP-LISTEN:6000,reuseaddr,fork UNIX-CLIENT:\\"$DISPLAY\\"\n```\n\n\n## Rendering animations on Jupyter notebook\n\nI think the best way to render animations of openAI gym on Jupyter notebook is to use virtual frame buffer as introduced by [jaimeps/docker-rl-gym](https://github.com/jaimeps/docker-rl-gym). Here is an example:\n\n```\nimport gym\nfrom IPython import display\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nenv = gym.make(\'Breakout-v0\')\nenv.reset()\nfor _ in range(50):\n    plt.imshow(env.render(mode=\'rgb_array\'))\n    display.clear_output(wait=True)\n    display.display(plt.gcf())\n    action=env.action_space.sample()\n    env.step(action)\n```\n\n', 'contents': "['.gitignore', 'Dockerfile', 'Makefile', 'README.md', 'aliases.sh', 'bin', 'gridworld-gym', 'jupyter.sh', 'requirements_dl.txt', 'requirements_gym.txt', 'requirements_py.txt']", 'stars': 0, 'watchers': 0, 'forks': 0, 'deprepos': 0, 'deppacks': 0}