{'dependent': 'kerasrl', 'repo': '/sm3rta/PocketTanks-AI-Agent', 'language': 'Python', 'description': 'An AI for Pocket Tanks', 'readme': '# PocketTanks-AI-Agent\nAn AI for Pocket Tanks\n## How to use :\n1. Install necessary dependencies, in requirements.txt.\n1. Open PocketTanks.exe.\n1. Make sure the only weapon that can be used is "Single Shot" in options.\n1. Enter target practice or 1 player mode.\n1. Make sure that your tank is cyan and the other one is orange.\n1. Run the script "PocketTanksAgent.py"\n1. You\'ll be asked to enter the values of 3 things\n   * Speed hack factor, I used Cheat Engine to make the game faster, particularly useful when gathering data from the game. If you use speed hack as well, it\'s necessary to enter it in the program at the beginning to synchronize the timing between the program and the game. If you don\'t use it, just enter 1.\n   * The angle currently displayed in the game, that will be updated by the program.\n   * The in game power.\n1. Press Enter and switch to the game, the agent should start playing.\n\n\n## File breakdown :\nFile | Discription\n--- | ---\nOpenCV.py | Contains OpenCV based functions which detect tanks coordinates, projectile coordinates and world shape features\nPocketTanksAgent.py | Starts the agent\nPocketTanksAgent.sln | Visual Studio Solution\nVariables.py | Contains global variables used by both PocketTanksAgent.py and DataGathering.py\ndata.csv\t| Contains data I collected from the game \ndataGathering.py | Generates random values and collects results, updates data.csv\nkeyboard.py\t| Contains keyboard related functions, responsible for updating ingame power and angle\nmodel.h5\t| keras sequential model\nrequirements.txt\t| Contains project dependencies, generated by Visual Studio, although I\'m sure not all of them are necessary\ntank_blue.png\t| Blue tank template for feature matching\ntank_blue3.png\t| Blue tank template for template matching\ntank_yellow.png\t| Yellow tank template for feature matching\ntank_yellow3.png\t| Yellow tank template for template matching\ntraining.py | Creates a neural network, trains it and saves the model to model.h5\n\n\n## Model Features :\nName | Discription\n--- | ---\ndeltaX and deltaY | horizontal and vertical distances between the two tanks\nw0 to w19 | Highest point y value in 20 divisions of the screen\nworldLowestAngle | The highest angle of all the angles between the two tanks and every co-ordinate of the world\'s highest points ![alt text](https://github.com/sm3rta/PocketTanks-AI-Agent/blob/master/worldLowestAngleDemo.png "worldLowestAngleDemo")\ndistanceX and distanceX | horizontal and vertical distances between the projectile when it hit the ground (or the tank) and the other tank\npower and angle | The power and angle used in this situation that resulted in distanceX and distanceY\n', 'contents': "['.vs', 'OpenCV.py', 'PocketTanksAgent.py', 'PocketTanksAgent.pyproj', 'PocketTanksAgent.sln', 'README.md', 'Variables.py', 'data.csv', 'dataGathering.py', 'keyboard.py', 'model.h5', 'requirements.txt', 'tank_blue.png', 'tank_blue3.png', 'tank_yellow.png', 'tank_yellow3.png', 'training.py', 'worldLowestAngleDemo.png']", 'stars': 1, 'watchers': 1, 'forks': 1, 'deprepos': 0, 'deppacks': 0}