{'dependent': 'kerasrl', 'repo': '/lelmac/robotsim', 'language': 'Python', 'description': None, 'readme': '# Simulator for EV3 as Environment for OpenAI Gym\n\n## 4 Environments:\n* AutonomousRobot-v0: Discrete Action Space, Infraredsensor and Ultrasonic Sensor, Random Spawns\n* AutonomousRobot-v1: Continuous Action Space, Infraredsensor and Ultrasonic Sensor, Random Spawns\n* AutonomousRobot-v2: Discrete Observation Space, Discrete Action Space (for Q-Learning), Infrared & Ultrasonic Sensor\n* AutonomousRobot-v3: Discrete Action Space, Target Position, Random Spawns, 3 Distance Sensors (Basically Scenario 3 from the Thesis)\n\nEach Environment can of course be customized indivually.\n\n## Setup\n1. Clone the Repo\n2. Install OpenAI Gym: https://github.com/openai/gym\n3. Run:\n```\n  sudo pip install -r requirements\n  sudo python setup.py install\n```\n \nOR: Use the Dockerfile to create a Container\n\nThen you should be ready to use the Environments by import gym_robot:\n```\n  import gym_robot\n```\n\n## Misc\nThe Repository comes with a few extas:\n* Few Agents: DDPG, DQN, DQN (With Keras-RL), Q-Learning, A3C(not really threaded), Keyboard Agent (can be handy when designing environments)\n* A Dockerfile\n* 2 Scripts for visualizing logfiles:\n\n  * for keras-rl logs:\n  ```\n  visualize.py filename.ending\n  ```\n  * for csv files:\n  ```\n  cs.py filename.ending \n  ```\n* Some pretrained Models\n\n## Simulation:\n* The simulation is located in gym_robot/envs/obstacles.py\n* Got 2 classes: one for obstacles and one for the robot itself\n* The Methods for the sensors are in robot class\n* Rendering is done by OpenAI Gym Renderer in the specific environment\n* test.py contains unit tests for the classes\n', 'contents': "['.gitignore', 'Dockerfile', 'README.md', 'a3c.py', 'agents', 'cs.py', 'ddpg.py', 'diagrams', 'dqn.py', 'gym_robot', 'keras_dqn.py', 'keyboard_agent.py', 'q-learning.py', 'realQAgent.py', 'requirements.txt', 'save', 'setup.py', 'visualize.py']", 'stars': 1, 'watchers': 1, 'forks': 1, 'deprepos': 0, 'deppacks': 0}