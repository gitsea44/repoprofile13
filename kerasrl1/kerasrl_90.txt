{'dependent': 'kerasrl', 'repo': '/jenslaufer/rl-trader', 'language': 'Python', 'description': None, 'readme': '# A module for RL trading #\n\n## Example Training JSON ##\n\n```json\n{\n"training" : {\n"ent_coef" : 0.01, \n"alpha" : 0.99, \n"verbose" : NumberInt(1), \n"n_steps" : NumberInt(5), \n"full_tensorboard_log" : false, \n"learning_rate" : 0.0007, \n"_init_setup_model" : true, \n"gamma" : 0.99, \n"vf_coef" : 0.25, \n"env" : {\n"name" : "di.factory.VecEnvFactory", \n"target" : "stable_baselines.common.vec_env.DummyVecEnv", \n"args" : [\n{\n"context" : {\n"trading_loss_pct" : 0.005, \n"initial_fundings" : 100000.0, \n"name" : "rltrader.context.TradingContext", \n"price_col_index" : NumberInt(3)\n}, \n"space" : {\n"max_steps" : NumberInt(10000), \n"random_start" : true, \n"history_lookback" : NumberInt(100), \n"data" : {\n"name" : "rltrader.data.CsvFileDataFrameData", \n"path" : "/rldata/preprocessed/train_ZL000013_reduced.csv"\n}, \n"action_space" : {\n"name" : "gym.spaces.Discrete", \n"n" : NumberInt(3)\n}, \n"name" : "rltrader.spaces.LookbackWindowDataSpace", \n"date_col" : "date"\n}, \n"reward" : {\n"name" : "rltrader.rewards.net_value_reward"\n}, \n"name" : "rltrader.env.Env", \n"context_reset" : true\n}\n]\n}, \n"tensorboard_log" : null, \n"policy" : {\n"target" : "stable_baselines.common.policies.MlpPolicy", \n"name" : "di.factory.ModuleFactory", \n"args" : [\n{\n\n}\n]\n}, \n"max_grad_norm" : 0.5, \n"epsilon" : 0.00001, \n"name" : "stable_baselines.A2C", \n"lr_schedule" : "constant"\n}, \n"total_timesteps" : NumberInt(201600), \n"test_env" : {\n"context" : {\n"trading_loss_pct" : 0.005, \n"initial_fundings" : 100000.0, \n"name" : "rltrader.context.TradingContext", \n"price_col_index" : NumberInt(3)\n}, \n"space" : {\n"max_steps" : NumberInt(201600), \n"random_start" : false, \n"history_lookback" : NumberInt(100), \n"data" : {\n"name" : "rltrader.data.CsvFileDataFrameData", \n"path" : "/rldata/preprocessed/test_ZL000013_reduced.csv"\n}, \n"action_space" : {\n"name" : "gym.spaces.Discrete", \n"n" : NumberInt(3)\n}, \n"name" : "rltrader.spaces.LookbackWindowDataSpace", \n"date_col" : "date"\n}, \n"reward" : {\n"name" : "rltrader.rewards.net_value_reward"\n}, \n"name" : "rltrader.env.Env", \n"context_reset" : false\n}\n}\n```\n\n## Steps to training ##\n\n### 1. Create a .env file ###\n\n   ```code\n   DATA_DIR=<location of data on machine>\n   ```\n\n### 2. Start training container to initialize containers and start database ###\n\n```shell\ndocker-compose -f "docker-compose-cpu.yml" up -d --build\n```\n\n### 3. Login into Mongo DB ###\n\n```shell\ndocker exec -it rltrainingdb bash\n```\n\n### 4. Add traing session to mongodb ###\n\nWithin the mongo shell execute the following commands:\n\n```shell\nroot@ef48e9fb644f:/# mongo\nMongoDB shell version v3.6.13\nconnecting to: mongodb://127.0.0.1:27017/?gssapiServiceName=mongodb\nImplicit session: session { "id" : UUID("85d86369-7933-400a-8980-77d0bca05020") }\nMongoDB server version: 3.6.13\nWelcome to the MongoDB shell.\nFor interactive help, type "help".\n> use training\nswitched to db training\n> db.sessions.insertOne({"training": {"ent_coef": 0.01,"alpha": 0.99,"verbose": NumberInt(1),"n_steps": NumberInt(5),"full_tensorboard_log": false,"learning_rate": 0.0007,"_init_setup_model": true,"gamma": 0.99,"vf_coef": 0.25,"env": {"name": "di.factory.VecEnvFactory","target": "stable_baselines.common.vec_env.DummyVecEnv","args": [{"context": {"trading_loss_pct": 0.005,"initial_fundings": 100000.0,"name": "rltrader.context.TradingContext","price_col_index": NumberInt(3)},"space": {"max_steps": NumberInt(10000),"random_start": true,"history_lookback": NumberInt(100),"data": {"name": "rltrader.data.CsvFileDataFrameData","path": "/rldata/preprocessed/train_ZL000013_reduced.csv"},"action_space": {"name": "gym.spaces.Discrete","n": NumberInt(3)},"name": "rltrader.spaces.LookbackWindowDataSpace","date_col": "date"},"reward": {"name": "rltrader.rewards.net_value_reward"},"name": "rltrader.env.Env","context_reset": true}]},"tensorboard_log": null,"policy": {"target": "stable_baselines.common.policies.MlpPolicy","name": "di.factory.ModuleFactory","args": [{}]},"max_grad_norm": 0.5,"epsilon": 0.00001,"name": "stable_baselines.A2C","lr_schedule": "constant"},"total_timesteps": NumberInt(201600),"test_env": {"context": {"trading_loss_pct": 0.005,"initial_fundings": 100000.0,"name": "rltrader.context.TradingContext","price_col_index": NumberInt(3)},"space": {"max_steps": NumberInt(201600),"random_start": false,"history_lookback": NumberInt(100),"data": {"name": "rltrader.data.CsvFileDataFrameData","path": "/rldata/preprocessed/test_ZL000013_reduced.csv"},"action_space": {"name": "gym.spaces.Discrete","n": NumberInt(3)},"name": "rltrader.spaces.LookbackWindowDataSpace","date_col": "date"},"reward": {"name": "rltrader.rewards.net_value_reward"},"name": "rltrader.env.Env","context_reset": false}})\n```\n\n### 5. Restart training containers ###\n\n```shell\ndocker-compose -f "docker-compose-cpu.yml" up -d --build\n```\n\n___Training is then performed and the resulting model, training and history are persisted in Mongo GridFS___\n', 'contents': "['.editorconfig', '.gitignore', 'MANIFEST.in', 'README.md', 'docker-compose.yml', 'session-template.json', 'setup.py', 'src', 'test']", 'stars': 2, 'watchers': 2, 'forks': 0, 'deprepos': 0, 'deppacks': 0}