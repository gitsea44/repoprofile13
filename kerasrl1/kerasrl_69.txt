{'dependent': 'kerasrl', 'repo': '/Ryan-Johnson-1315/HVACReinforcementLearning', 'language': 'Python', 'description': None, 'readme': '<h3 align="center">\r\n  <img src="assets/cartpole_icon_web.png" width="300">\r\n</h3>\r\n\r\n# Cartpole\r\n\r\nReinforcement Learning solution of the [OpenAI\'s Cartpole](https://gym.openai.com/envs/CartPole-v0/).\r\n\r\nCheck out corresponding Medium article: [Cartpole - Introduction to Reinforcement Learning (DQN - Deep Q-Learning)](https://towardsdatascience.com/cartpole-introduction-to-reinforcement-learning-ed0eb5b58288)\r\n\r\n## About\r\n\r\n> A pole is attached by an un-actuated joint to a cart, which moves along a frictionless track. The system is controlled by applying a force of +1 or -1 to the cart. The pendulum starts upright, and the goal is to prevent it from falling over. A reward of +1 is provided for every timestep that the pole remains upright. The episode ends when the pole is more than 15 degrees from vertical, or the cart moves more than 2.4 units from the center. [source](https://gym.openai.com/envs/CartPole-v0/)\r\n\r\n## DQN\r\nStandard DQN with Experience Replay.\r\n\r\n### Hyperparameters:\r\n\r\n* GAMMA = 0.95\r\n* LEARNING_RATE = 0.001\r\n* MEMORY_SIZE = 1000000\r\n* BATCH_SIZE = 20\r\n* EXPLORATION_MAX = 1.0\r\n* EXPLORATION_MIN = 0.01\r\n* EXPLORATION_DECAY = 0.995\r\n\r\n### Model structure:\r\n\r\n1. Dense layer - input: **4**, output: **24**, activation: **relu**\r\n2. Dense layer - input **24**, output: **24**, activation: **relu**\r\n3. Dense layer - input **24**, output: **2**, activation: **linear**\r\n\r\n* **MSE** loss function\r\n* **Adam** optimizer\r\n\r\n\r\n## Performance\r\n\r\n> CartPole-v0 defines "solving" as getting average reward of 195.0 over 100 consecutive trials. [source](https://gym.openai.com/envs/CartPole-v0/)\r\n> \r\n\r\n##### Example trial gif\r\n\r\n<img src="assets/cartpole_example.gif" width="200">\r\n\r\n\r\n##### Example trial chart\r\n\r\n<img src="scores/scores.png">\r\n\r\n##### Solved trials chart\r\n\r\n<img src="scores/solved.png">\r\n\r\n\r\n# HVAC Learning Group\r\n\r\nNeed to change the step() function in `cartpolegym.py`. Needs to match the parameters for these [equations](http://www.sharetechnote.com/html/DE_Modeling_Example_Cooling.html). See [this website](https://github.com/openai/gym/wiki/CartPole-v0) as well. The idea is the ouput of this function will return an action to heat or cool [-1 ... 1], or no action [0].\r\n\r\nI think we also need to figure out how to save the model? Not sure if we do or not. Aditi would know better..', 'contents': "['.gitignore', '.idea', 'CleanEnergyHVACGroup-master.zip', 'CleanEnergyHVACGroup-master', 'LICENSE', 'README.md', 'RL', '__init__.py', 'assets', 'cartpole.py', 'cartpolegym.py', 'done.py', 'gym-hvac', 'requirements.txt', 'scores']", 'stars': 0, 'watchers': 0, 'forks': 0, 'deprepos': 0, 'deppacks': 0}