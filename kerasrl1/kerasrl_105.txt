{'dependent': 'kerasrl', 'repo': '/pascalwhoop/broker-python', 'language': 'Jupyter Notebook', 'description': None, 'readme': '# PowerTAC Python Adapter to broker-adapter\n\n## Installation\n\n```\npip install virtualenv\nvirtualenv -p python3.6 venv/\nsource venv/bin/activate\npython setup.py install\npip install editable .\nagent --help\n```\n\n## Running the tests\n\nyou may either run `pytest` or the `/run_tests.sh` script. The latter may need you to have `inotify-tools`\ninstalled as well as a proper limit for file watches [like so](https://unix.stackexchange.com/questions/13751/kernel-inotify-watch-limit-reached#13757)\n\n## Architecture\n\n- `scripts` holds utility script that can be run independently files\n- `notebooks` holds Jupyter notebooks \n- `main.py` is the main entry of the agent and it expects parameters to control what to be started\n- `communication` holds the abstraction to the powertac server as well as the pub/sub tooling to let components send\n  messages to each other\n- `data` and `Graph` are to be ignored in git and they hold training data and tensorboard logs respectively\n\n\n## Starting Jupyter Notebooks\nstart them with `jupyter notebook`. The first cell adds the project to the sys.path so we can include local path\nmodules. \n\n## Code Generation for GRPC connector\nrun the shell script in the root of the project. but first run `pip3 install grpcio-tools` and make sure you have python3 and pip3 installed and in your PATH.\n\n## Todo\n\n- Model definition based on XML messages\n- Turning Events into consistent "Environment"\n- Storing all messages in local memory\n- Pickling ?\n- ...\n', 'contents': "['.gitignore', '.pylintrc', 'LICENSE', 'README.md', '__init__.py', 'agent_components', 'communication', 'dist', 'generate_python_stubs.sh', 'main.py', 'notebooks', 'requirements.txt', 'run_tests.sh', 'scratchpad.txt', 'scripts', 'setup.cfg', 'setup.py', 'tests', 'util']", 'stars': 0, 'watchers': 0, 'forks': 0, 'deprepos': 0, 'deppacks': 0}